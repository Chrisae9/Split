{"version":3,"sources":["components/TopPage.js","components/ReceiptContributors.js","components/ReceiptTable.js","components/SplitReceipt.js","components/ReceiptContributorModal.js","App.js","reportWebVitals.js","index.js"],"names":["TopPage","className","ReceiptContributors","contributors","setContributors","dispatch","useState","contributor","setContributor","inputContributorRef","useRef","rowEvents","onClick","e","row","rowIndex","prevContributor","filter","p","id","type","ACTIONS","REMOVE_CONTRIBUTOR","payload","Form","onSubmit","event","preventDefault","prevContributors","UUID","name","current","focus","Group","controlId","Control","placeholder","value","ref","onChange","target","Button","variant","keyField","data","columns","dataField","hidden","text","sort","hover","condensed","ReceiptTable","items","formatter","cell","col","colIndex","map","contrib","i","length","setName","cost","setCost","total","setTotal","inputNameRef","DELETE_ITEM","useEffect","forEach","element","parseFloat","selectRow","mode","onSelect","isSelect","TOGGLE_ITEM","onSelectAll","rows","TOGGLE_ITEMS","selected","striped","toFixed","ADD_ITEM","allowDecimals","decimalsLimit","prefix","SplitReceipt","show","setShow","handleClose","Modal","onHide","size","Header","closeButton","Title","Body","Card","Text","ListGroup","item","includes","splitCost","ListGroupItem","Footer","remaining","getRemaining","ReceiptContributorModal","handleContributor","setMode","ADD_CONTRIBUTOR","headerAttrs","DELETE_CONTRIBUTOR","reducer","action","concat","App","useReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.542f3c6a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function TopPage() {\n  return (\n    <div>\n      <h1 className=\"text-center\">Split</h1>\n    </div>\n  );\n}\n","import { React, useState, useRef } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { v4 as UUID } from \"uuid\";\nimport { ACTIONS } from \"../App\";\n\nexport default function ReceiptContributors({\n  contributors,\n  setContributors,\n  dispatch,\n}) {\n  const columns = [\n    {\n      dataField: \"id\",\n      hidden: true,\n    },\n    {\n      dataField: \"name\",\n      text: \"Contributors List\",\n      sort: true,\n    },\n  ];\n\n  const [contributor, setContributor] = useState(\"\");\n  const inputContributorRef = useRef();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    // Add to the start of contributors\n    setContributors(\n      (prevContributors) =>\n        (prevContributors = [\n          { id: UUID(), name: contributor },\n          ...prevContributors,\n        ])\n    );\n    setContributor(\"\");\n    inputContributorRef.current.focus();\n  }\n\n  // Click to delete Contributor\n  const rowEvents = {\n    // make sure to remove contributor from items\n    onClick: (e, row, rowIndex) => {\n      setContributors((prevContributor) =>\n        prevContributor.filter((p) => p.id !== row.id)\n      );\n      dispatch({\n        type: ACTIONS.REMOVE_CONTRIBUTOR,\n        payload: { contributor: row },\n      });\n    },\n  };\n\n  return (\n    <>\n      {/* Receipt Contributor */}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"receiptContributor\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Contributor\"\n            value={contributor}\n            ref={inputContributorRef}\n            onChange={(e) => setContributor(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"receiptAddContributor\">\n          {/* Contributor Add */}\n          <Button type=\"submit\" variant=\"secondary\">\n            Add\n          </Button>\n        </Form.Group>\n      </Form>\n\n      {/* Contributors  */}\n      <BootstrapTable\n        keyField=\"id\"\n        data={contributors}\n        columns={columns}\n        rowEvents={rowEvents}\n        hover\n        condensed\n      />\n    </>\n  );\n}\n","import { React, useState, useRef, useEffect } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Form, Button } from \"react-bootstrap\";\nimport CurrencyInput from \"react-currency-input-field\";\nimport { ACTIONS } from \"../App.js\";\n\nexport default function ReceiptTable({ items, dispatch }) {\n  // Datafeilds for the receipt table\n  const columns = [\n    {\n      dataField: \"id\",\n      hidden: true,\n    },\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n    },\n    {\n      dataField: \"cost\",\n      text: \"Cost\",\n      sort: true,\n      formatter: (cell, row) => {\n        return <>${cell}</>;\n      },\n    },\n    {\n      dataField: \"selected\",\n      text: \"Selected\",\n      hidden: true,\n    },\n    {\n      dataField: \"contributors\",\n      text: \"Contributors \",\n      formatter: contributorsFormatter,\n    },\n  ];\n\n  // Formatter for the contributors column\n  function contributorsFormatter(col, colIndex) {\n    var string = col.map((contrib, i) => {\n      if (i < col.length - 1) {\n        return contrib.name + \", \";\n      } else {\n        return contrib.name;\n      }\n    });\n\n    return string;\n  }\n\n  const [name, setName] = useState(\"\");\n  const [cost, setCost] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n\n  const inputNameRef = useRef();\n\n  // Click to delete item\n  const rowEvents = {\n    onClick: (e, row, rowIndex) => {\n      dispatch({ type: ACTIONS.DELETE_ITEM, payload: { id: row.id } });\n    },\n  };\n\n  // Submit form action\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    // Add to the start of items\n    dispatch({\n      type: ACTIONS.ADD_ITEM,\n      payload: {\n        name: name,\n        cost: parseFloat(cost).toFixed(2),\n      },\n    });\n    // Reset fields and focus item name\n    setName(\"\");\n    inputNameRef.current.focus();\n    setCost(\"\");\n  }\n\n  useEffect(() => {\n    // Computes the total cost, ugly but works for now.\n    var total = 0;\n    items.forEach((element) => {\n      total = total + (parseFloat(element.cost) || 0);\n    });\n    setTotal(total);\n  }, [items]);\n\n  // React bootstrap table select row feature\n  const selectRow = {\n    mode: \"checkbox\",\n    onSelect: (row, isSelect, rowIndex, e) => {\n      dispatch({ type: ACTIONS.TOGGLE_ITEM, payload: { id: row.id } });\n    },\n    onSelectAll: (isSelect, rows, e) => {\n      dispatch({ type: ACTIONS.TOGGLE_ITEMS, payload: { selected: isSelect } });\n    },\n  };\n\n  return (\n    <>\n      {/* Table to display items */}\n      <BootstrapTable\n        keyField=\"id\"\n        data={items}\n        columns={columns}\n        rowEvents={rowEvents}\n        selectRow={selectRow}\n        striped\n        hover\n        condensed\n      />\n\n      {/* Total cost of the items */}\n      <h4>Total = ${parseFloat(total).toFixed(2)}</h4>\n\n      {/* Form to submit the items */}\n      <Form onSubmit={handleSubmit}>\n        {/* Name of the Item */}\n        <Form.Group controlId=\"itemName\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Item\"\n            value={name}\n            ref={inputNameRef}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Group>\n        {/* Cost of the item */}\n        <Form.Group controlId=\"itemCost\">\n          <CurrencyInput\n            placeholder=\"$0.00\"\n            allowDecimals={true}\n            decimalsLimit={2}\n            prefix=\"$\"\n            className=\"form-control\"\n            // allowEmpty=\"true\"\n            value={cost}\n            onChange={(value) => setCost(value)}\n          />\n        </Form.Group>\n        {/* Button to add the item to the table */}\n        <Form.Group controlId=\"formSubmit\">\n          <Button type=\"submit\" variant=\"secondary\">\n            Add Item\n          </Button>\n        </Form.Group>\n      </Form>\n    </>\n  );\n}\n","import { React, useState } from \"react\";\nimport { Button, Modal, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\n\nexport default function SplitReceipt({ contributors, items }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  function handleSplit() {\n    setShow(true);\n  }\n\n  function getBill() {\n    return contributors.map((contributor) => {\n      var total = 0;\n      return (\n        <Card>\n          <Card.Body>\n            <Card.Title>{contributor.name}</Card.Title>\n            <Card.Text>\n              <ListGroup>\n                {items.map((item) => {\n                  if (item.contributors.includes(contributor)) {\n                    var splitCost =\n                      parseFloat(item.cost) / item.contributors.length;\n                    total = total + splitCost;\n                    return (\n                      <ListGroupItem key={item.id}>\n                        {item.name}: ${splitCost.toFixed(2)}\n                      </ListGroupItem>\n                    );\n                  }\n                })}\n              </ListGroup>\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer>${total.toFixed(2)}</Card.Footer>\n        </Card>\n      );\n    });\n  }\n\n  function getRemaining() {\n    var remaining = 0;\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title>Remaining</Card.Title>\n          <Card.Text>\n            <ListGroup>\n              {items.map((item) => {\n                if (item.contributors.length === 0) {\n                  remaining = remaining + parseFloat(item.cost);\n                  return (\n                    <ListGroupItem key={item.id}>\n                      {item.name}: ${item.cost}\n                    </ListGroupItem>\n                  );\n                }\n              })}\n            </ListGroup>\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>${remaining.toFixed(2)}</Card.Footer>\n      </Card>\n    );\n  }\n\n  //TODO Remaining Cost\n\n  return (\n    <>\n      <Button variant=\"dark\" onClick={() => handleSplit()}>\n        Split\n      </Button>\n      {/* Modal Pop-up window */}\n      <Modal show={show} onHide={handleClose} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>Split Bill </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {getBill()}\n          {getRemaining()}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Done\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import { React, useState } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { ACTIONS } from \"../App\";\n\nexport default function ReceiptContributorModal({ contributors, dispatch }) {\n  const columns = [\n    {\n      dataField: \"id\",\n      hidden: true,\n    },\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      headerAttrs: {\n        hidden: true,\n      },\n    },\n  ];\n\n  function handleContributor(mode) {\n    setMode(mode);\n    setShow(true);\n  }\n\n  const [show, setShow] = useState(false);\n  const [mode, setMode] = useState(ACTIONS.ADD_CONTRIBUTOR);\n\n  const handleClose = () => setShow(false);\n\n  const rowEvents = {\n    onClick: (e, row, rowIndex) => {\n      dispatch({\n        type: mode,\n        payload: { contributor: row },\n      });\n      handleClose();\n    },\n  };\n\n  return (\n    <>\n      {/* Modal Pop-up window */}\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Select Contributor </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <BootstrapTable\n            keyField=\"id\"\n            data={contributors}\n            columns={columns}\n            rowEvents={rowEvents}\n            hover\n            condensed\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Add contributor button */}\n      <Form.Group controlId=\"contributorAdd\">\n        <Button\n          type=\"submit\"\n          onClick={() => handleContributor(ACTIONS.ADD_CONTRIBUTOR)}\n          variant=\"secondary\"\n        >\n          Assign\n        </Button>\n      </Form.Group>\n\n      {/* Delete contributor button */}\n      <Form.Group controlId=\"contributorDelete\">\n        <Button\n          type=\"submit\"\n          onClick={() => handleContributor(ACTIONS.DELETE_CONTRIBUTOR)}\n          variant=\"danger\"\n        >\n          Remove\n        </Button>\n      </Form.Group>\n    </>\n  );\n}\n","import \"./App.css\";\nimport { React, useState, useReducer } from \"react\";\nimport TopPage from \"./components/TopPage\";\nimport ReceiptName from \"./components/ReceiptName\";\nimport ReceiptContributors from \"./components/ReceiptContributors\";\nimport ReceiptTable from \"./components/ReceiptTable\";\nimport SplitReceipt from \"./components/SplitReceipt\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as UUID } from \"uuid\";\nimport ReceiptContributorModal from \"./components/ReceiptContributorModal\";\n\nexport const ACTIONS = {\n  ADD_ITEM: \"add-item\",\n  DELETE_ITEM: \"delete-item\",\n  TOGGLE_ITEM: \"toggle-item\",\n  TOGGLE_ITEMS: \"toggle-items\",\n  ADD_CONTRIBUTOR: \"add-contributor\",\n  DELETE_CONTRIBUTOR: \"delete-contributor\",\n  REMOVE_CONTRIBUTOR: \"remove-contributor\",\n};\n\nfunction reducer(items, action) {\n  switch (action.type) {\n    case ACTIONS.ADD_ITEM:\n      return [...items, newItem(action.payload.name, action.payload.cost)];\n    case ACTIONS.TOGGLE_ITEM:\n      return items.map((item) => {\n        if (item.id === action.payload.id) {\n          return { ...item, selected: !item.selected };\n        }\n        return item;\n      });\n    case ACTIONS.TOGGLE_ITEMS:\n      return items.map((item) => {\n        return { ...item, selected: action.payload.selected };\n      });\n    case ACTIONS.DELETE_ITEM:\n      return items.filter((item) => item.id !== action.payload.id);\n    case ACTIONS.ADD_CONTRIBUTOR:\n      return items.map((item) => {\n        if (\n          item.selected &&\n          !item.contributors.includes(action.payload.contributor)\n        ) {\n          return {\n            ...item,\n            contributors: item.contributors.concat(action.payload.contributor),\n          };\n        }\n        return item;\n      });\n    // TODO: Reference contributors ONLY by ID\n    case ACTIONS.REMOVE_CONTRIBUTOR:\n      return items.map((item) => {\n        if (item.contributors.includes(action.payload.contributor)) {\n          return {\n            ...item,\n            contributors: item.contributors.filter(\n              (contributor) => contributor !== action.payload.contributor\n            ),\n          };\n        }\n        return item;\n      });\n    case ACTIONS.DELETE_CONTRIBUTOR:\n      return items.map((item) => {\n        if (\n          item.selected &&\n          item.contributors.includes(action.payload.contributor)\n        ) {\n          return {\n            ...item,\n            contributors: item.contributors.filter(\n              (contributor) => contributor !== action.payload.contributor\n            ),\n          };\n        }\n        return item;\n      });\n    default:\n      return items;\n  }\n}\n\nfunction newItem(name, cost) {\n  return {\n    id: UUID(),\n    name: name,\n    cost: cost,\n    selected: false,\n    contributors: [],\n  };\n}\n\nfunction App() {\n  // Receipt ID for use with database\n  // const [id, setID] = useState(UUID());\n  // const [name, setName] = useState(\"\");\n\n  const [contributors, setContributors] = useState([]);\n\n  const [items, dispatch] = useReducer(reducer, []);\n  return (\n    <>\n      <TopPage />\n\n      <Card className=\"col-11 mx-auto\">\n        <Card.Body>\n          {/* Uncomment when database is implemented */}\n          {/* <ReceiptName value={name} onChange={(name) => setName(name)} /> */}\n          <ReceiptContributors\n            contributors={contributors}\n            setContributors={(contributors) => setContributors(contributors)}\n            dispatch={dispatch}\n          />\n          <ReceiptContributorModal\n            contributors={contributors}\n            dispatch={dispatch}\n          />\n          <ReceiptTable items={items} dispatch={dispatch} />\n\n          <SplitReceipt contributors={contributors} items={items} />\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}